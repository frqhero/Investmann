Сообщение: !concept
  Определение: Конечный продукт работы приложения. Готовый для использования в прикладном коде объект.
  Текстовое сообщение: !example |
    Сообщение состоящее только из текста
  Пустое текстовое сообщение: !example |
    Текстовое сообщение может состоять из пустой строки
  Сообщение с бинарным контентом: !example |
    Сообщение с картинкой, фотографией, фотогалереей, документом
  Сообщение с кнопками: !example
  Сообщение на конкретном языке: !example
  Сообщение требующее выбрать язык перед отправкой: !example |
    Библиотека не регламентирует работу рендерера с языками. Язык может определяться как до рендеринга, так и после.


Шаблон сообщения: !concept
  Определение: Хранящийся в Источнике данных объект, необходимый для подготовки Сообщения.
  Ломающий шаблонизатор шаблон сообщения: !example |
    Текст шаблона содержит символы, ломающие шаблонизатор
  Шаблон с текстовым контентом: !example
  Шаблон текстового сообщения с переменными: !example |
    Шаблон текстового сообщения содержит переменные, в которые перед отправкой подставляются актуальные данные
  Шаблон с бинарным контентом: !example
  Шаблон со смешанным контентом: !example |
    В шаблоне содержится как текстовая информация, так и бинарная
  Шаблон привязан к Локатору сообщения: !example
  Шаблон не привязан к Локатору сообщения: !exclusion |
    Шаблон не привязанный к локатору сообщения не может быть использован рендерером
  Шаблон привязан к нескольким Локаторам сообщения: !example |
    Библиотека является db-agnostic, т.е. не регламентирует структуру источника данных
  Шаблон с кнопками: !example |
    В шаблоне помимо сообщения хранится информация о кнопках для этого сообщения. В том числе их положение в клавиатуре


Источник данных: !concept
  Определение: Хранилище Шаблонов сообщений
  Внешний источник данных: !example |
    База данных, файл, API.
  Мок источник: !example |
    Во время разработки программист может замокать источник данных текстовкой в коде.


Контракт сообщения: !concept
  Синонимы: Требования к сообщению, манифест сообщения
  Определение: Набор требований, которые код предъявляет к конкретному Шаблону сообщения.
  Контракт с ключевой мыслью: !example
    Контракт содержит ключевую мысль сообщения.
  Контракт со схемой контекста: !example
    В контракте описаны переменные Контекста рендеринга
  Контракт с плейсхолдером: !example |
    Плейсхолдер может использоваться рендерером, в случае, если не удалось найти нужный Шаблон сообщения
    в Источнике данных
  Контракт с кнопками: !example |
    В контракте сообщения перечислены требования по обязательным кнопкам
  Контракт с ограничениями по языкам: !example |
    В контракте перечислены языки, на которых это сообщение должно быть отправлено
  Закреплённый за Локатором Контракт: !example
  Контракт закрепленный за несколькими локаторами: !example
  Контракт не закрепленный за локатором: !exclusion
    Контракт не закрепленный за локаторам не может быть найден в роутере


Контракт кнопки: !concept
  Определение: Набор требований, которые код предъявляет к кнопкам в конкретном сообщении
  Контракт кнопки с действием: !example |
    К кнопке предъявляется требование относительно действия, которое она выполняет. Например для телеграм бота регламентируется callback_data.
  Контракт кнопки с ограничениями по языкам: !example |
    К кнопке перечислены языки, для которых эта кнопка должна присутствовать в сообщении
  Языки контракта кнопки не соответствуют языкам контракта сообщения: !exclusion |
    Множество языков кнопок не должно выходить за множество языков сообщения
  Одинаковые действия кнопок в одном контракте сообщения: !exclusion |
    В одном контракте сообщения не могут присутствовать контракты кнопкок с одинаковым действием
  Контракт с лписанием действия: !example
    Контракт содержит описание, что делает кнопка.

Схема сообщений: !concept
  Определение: Совокупность всех Контрактов в коде


Роутер сообщений: !concept
  Определение: |
    Регистратор Контрактов сообщений. Содержит реестр всех Контрактов в коде и позволяет по Локатору получить необходимый Контракт.
  Роутер разрешает заменить контракт: !exclusion |
    Если в ротуере уже зарегистрирован контракт, то роутер не даст присвоить по даному локатору новый контракт


Локатор сообщения: !concept
  Определение: Локатор сообщения -- это аналог адреса сайта или пути к файлу, только для Сообщений.
    Локатор позволяет получить Контракт, зарегистрированный в Роутере.
  Параметризованный локатор серии сообщений: !exclusion |
    Локатор не может содержать внутри себя данные, подобно url `/user/:username:/`.
  Юникод: !example |
    Локатор может помимо ASCII-символов содержать кириллицу, китайские иероглифы и даже эльфийский текст.
    Эта возможность полезна для сайтов и чат-ботов с интерфейсом, настраиваемым через админку. В таком случае
    локаторы придумывает и задаёт администратор. Делает он это на своём родном языке.
  Составной локатор: !example |
    Локатор состоит из 2 частей: name_space и name. Это позволяет избежать путаницы с именованием Сообщений.


Рендерер: !concept
  Определение: |
    Рендерер согласно Контракту находит нужный Шаблон сообщениями в Источнике данных, скармливает его Шаблонизатору
    и возвращает готовое к использованию Сообщение.


Шаблонизатор: !concept
  Определение: |
    Шаблонизатор берет шаблон текстового сообщения с переменными и подставляет в него актуальные дынные из контекста рендеринга.
    Не текстовый шаблонизатор: !exclusion |
    Шаблонизатор работает только с текстовыми сообщениями.
  Конвертирующий шаблонизатор: !example |
    Шаблонизатор может принимать различные не бинарные типы данных и конвертировать их в текстовые.
  Альтернативный шаблонизатор: !extension |
    Стандартный шаблонизатор может не устраивать разработчика. Например он захочет, чтобы шаблонизатор учитывал
    падежи и прочую грамматику. В таком случае он может заменить стандартный шаблонизатор на кастомный.
    Потянет за собой и альтернативный виджет в админке.
  Асинхронный шаблонизатор: !exclusion |
    Подразумевается, что шаблонизатор к моменту запуска уже имеет все необходимые данные для работы.
    Поэтому блокирующих запросов в нем быть не должно. Асинхрон ему в работе никак не поможет.
    Однако это не касается альтернативных шаблонизаторов.
  Bulk-шаблонизатор: !exclusion |
    Шаблонизатор обрабатывает один Шаблон сообщения за раз.


Контекст рендеринга: !concept
  Определение: |
    Контекст общения с пользователем. Хранит в себе актуальные данные текущей сессии, которые рендерер вставляет в шаблоны сообщений, например:
    имя пользователя, товары в корзине, заполненные поля анкеты и т.д.
    Контекст состоит из переменных, которые вставляются в шаблон.
  Изменяемый контекст: !example |
    В течение диалога контекст постоянно актуализируется.
  Бинарный контекст: !exclusion |
    Контекст нужен для работы шаблонизатора. Шаблонизатор работает только с текстовыми сообщениями.
  Не текстовый контекст: !example |
    Контекст может содержать любые не бинарные данные, которые можно конвертировать в текст: числа, даты, None и т.д.

Виджет: !concept
  Синонимы: Редактор сообщений
  Определение: |
    Виджет на фронтенде, позволяющий КМ редактировать текстовки сообщений.
  Виджет с подсветкой синтаксиса: !extension |
    Подсветка синтаксиса MD и HTML облегчит работу пользователя.
