# Generated by Django 4.2.1 on 2023-10-04 13:13

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_chat_id', models.BigIntegerField(db_index=True, help_text='Id чата в Tg, где пользователь общается с ботом.', unique=True, verbose_name='Id чата в Tg')),
                ('tg_user_id', models.BigIntegerField(db_index=True, help_text='Id пользователя Telegram, с которым общается чат-бот. С одним пользователем может вестись сразу несколько чатов, каждому -- своя сессия чат-бота.<br>Пример значения: <code>123456789</code>.<br>Чтобы узнать ID пользователя, перешлите сообщение пользователя боту <a href="https://t.me/userinfobot">@userinfobot</a>.', verbose_name='Id юзера в Tg')),
                ('state_machine_locator', models.JSONField(blank=True, help_text='Локатор состояния, в котором сейчас находится чат с пользователем. Заполняется автоматически. Используется стейт-машиной.<br>Пример значения: <code>{"state_class_locator": "/start-menu/"}</code>.<br>В поле хранится объект JSON в формате локатора из библиотеки <a href="https://pypi.org/project/yostate/">yostate</a>: атрибут <code>state_class_locator</code> указывает локатор класса состояния и похож на часть адреса URL, атрибут <code>params</code> задаёт параметры состояния.', null=True, verbose_name='Cостояние')),
                ('last_update_tg_username', models.CharField(blank=True, db_index=True, help_text='Имя пользователя в Telegram. Используется для поиска человека в базе данных по его нику в Telegram. Заполняется автоматически. <br>Имя пользователя хранится без старового символа <code>@</code>, например: <code>ivan-petrov</code>. Поле может быть пустым, если у пользователя не указан Telegram username.', max_length=50, verbose_name='Ник юзера Tg')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Когда была создана сессия. Обычно, сессия создаётся при первом сообщении пользователя к чат-боту.', verbose_name='Когда создана')),
                ('interacted_at', models.DateTimeField(blank=True, db_index=True, help_text='Когда было последнее взаимодействие пользователя с чат-ботом. Обновляется автоматически.<br/>Не каждое событие в чате считается за взаимодействие. Например, если сообщение от чат-бота только было доставлено, то пользователь об этом может и знать. А вот если сообщение было прочитано -- то это уже считаем за взаимодействие.', null=True, verbose_name='Последнее взаимодействие')),
            ],
            options={
                'verbose_name': 'Сессия бота в приватном чате',
                'verbose_name_plural': 'Сессии бота в приватных чатах',
                'abstract': False,
                'unique_together': {('tg_chat_id', 'tg_user_id')},
            },
        ),
    ]
