apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  namespace: dev-investmann-main-distracted-keldysh
  labels:
    app.kubernetes.io/name: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: django
  template:
    metadata:
      labels:
        app.kubernetes.io/name: django
    spec:
      containers:
      - name: django-container
        image: cr.yandex/crppvo9bpgsbl1m4dccq/django:<COMMIT_HASH>
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: django
        env:
          - name: DJ__SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: django
                key: secret_key
                optional: false
          - name: ROLLBAR__BACKEND_TOKEN
            valueFrom:
              secretKeyRef:
                name: rollbar
                key: backend_token
                optional: false
          - name: POSTGRES_DSN
            valueFrom:
              secretKeyRef:
                name: postgres
                key: dsn
                optional: false
          - name: S3_DSN
            valueFrom:
              secretKeyRef:
                name: bucket
                key: dsn
                optional: false
        volumeMounts:
          - mountPath: "/root/.postgresql/"
            name: psql-cert
            readOnly: true
#      - name: django-worker-container
#        image: cr.yandex/crppvo9bpgsbl1m4dccq/django:<COMMIT_HASH>
#        imagePullPolicy: IfNotPresent
#        envFrom:
#          - configMapRef:
#              name: django
#        env:
#          - name: DJ__SECRET_KEY
#            valueFrom:
#              secretKeyRef:
#                name: django
#                key: secret_key
#                optional: false
#          - name: ROLLBAR__BACKEND_TOKEN
#            valueFrom:
#              secretKeyRef:
#                name: rollbar
#                key: backend_token
#                optional: false
#          - name: POSTGRES_DSN
#            valueFrom:
#              secretKeyRef:
#                name: postgres
#                key: dsn
#                optional: false
#          - name: S3_DSN
#            valueFrom:
#              secretKeyRef:
#                name: bucket
#                key: dsn
#                optional: false
#        volumeMounts:
#          - mountPath: "/root/.postgresql/"
#            name: psql-cert
#            readOnly: true
#        command: ["./manage.py", "run_worker", "trigger_mailing.funnels.mailing_queue", "-v", "3"]

      initContainers:
      - name: init-django
        image: cr.yandex/crppvo9bpgsbl1m4dccq/django:<COMMIT_HASH>
        imagePullPolicy: IfNotPresent
        command: ["python", "manage.py", "collectstatic", "--noinput"]
        envFrom:
          - configMapRef:
              name: django
        env:
          - name: DJ__SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: django
                key: secret_key
                optional: false
          - name: ROLLBAR__BACKEND_TOKEN
            valueFrom:
              secretKeyRef:
                name: rollbar
                key: backend_token
                optional: false
          - name: POSTGRES_DSN
            valueFrom:
              secretKeyRef:
                name: postgres
                key: dsn
                optional: false
          - name: S3_DSN
            valueFrom:
              secretKeyRef:
                name: bucket
                key: dsn
                optional: false
      volumes:
        - name: psql-cert
          secret:
            secretName: psql-root-crt

---
apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: dev-investmann-main-distracted-keldysh
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: django
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
      nodePort: 30468
